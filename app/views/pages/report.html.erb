<div class= "relative p-4 container flex space-x-4" style=" justify-content:center; gap:10%">

    <div id="bar-chart" class="max-w-sm w-full bg-white rounded-lg shadow dark:bg-gray-800 p-4 md:p-6">
        <div class="flex justify-between border-gray-200 border-b dark:border-gray-700 pb-3">
            <dl>
                <dt class="text-base font-normal text-gray-500 dark:text-gray-400 pb-1">Genel Durum</dt>
                <% if @total >= 0 %>
                    <dd class="leading-none text-3xl font-bold text-green-500 dark:text-white"><%= @total %></dd>
                <% else %> 
                    <dd class="leading-none text-3xl font-bold text-red-500 dark:text-white"><%= @total %></dd>
                <% end %>
            </dl>
            <div>
            <span class="bg-green-100 text-green-800 text-xs font-medium inline-flex items-center px-2.5 py-1 rounded-md dark:bg-green-900 dark:text-green-300">
                <svg class="w-2.5 h-2.5 me-1.5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 10 14">
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13V1m0 0L1 5m4-4 4 4"/>
                </svg>
                Profit rate 23.5%
            </span>
            </div>
        </div>

        <div class="grid grid-cols-2 py-3">
            <dl>
            <dt class="text-base font-normal text-gray-500 dark:text-gray-400 pb-1">Gelir</dt>
            <dd class="leading-none text-xl font-bold text-green-500 dark:text-green-400">+ <%= @income_total %></dd>
            </dl>
            <dl>
            <dt class="text-base font-normal text-gray-500 dark:text-gray-400 pb-1">Gider</dt>
            <dd class="leading-none text-xl font-bold text-red-600 dark:text-red-500">- <%= @expense_total %></dd>
            </dl>
        </div>

        <div id="bar-chart"></div>
        <div class="grid grid-cols-1 items-center border-gray-200 border-t dark:border-gray-700 justify-between">
            <div class="flex justify-between items-center pt-5">
                <!-- Button -->
                <button
                id="dropdownDefaultButton"
                data-dropdown-toggle="lastDaysdropdown"
                data-dropdown-placement="bottom"
                class="text-sm font-medium text-gray-500 dark:text-gray-400 hover:text-gray-900 text-center inline-flex items-center dark:hover:text-white"
                type="button">
                Last 6 months
                <svg class="w-2.5 m-2.5 ms-1.5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 10 6">
                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 4 4 4-4"/>
                </svg>
                </button>
                <!-- Dropdown menu -->
                <div id="lastDaysdropdown" class="z-10 hidden bg-white divide-y divide-gray-100 rounded-lg shadow w-44 dark:bg-gray-700">
                    <ul class="py-2 text-sm text-gray-700 dark:text-gray-200" aria-labelledby="dropdownDefaultButton">
                    <li>
                        <a href="#" class="block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">Yesterday</a>
                    </li>
                    <li>
                        <a href="#" class="block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">Today</a>
                    </li>
                    <li>
                        <a href="#" class="block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">Last 7 days</a>
                    </li>
                    <li>
                        <a href="#" class="block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">Last 30 days</a>
                    </li>
                    <li>
                        <a href="#" class="block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">Last 90 days</a>
                    </li>
                    <li>
                        <a href="#" class="block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">Last 6 months</a>
                    </li>
                    <li>
                        <a href="#" class="block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">Last year</a>
                    </li>
                    </ul>
                </div>
                
            </div>
        </div>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function() {
            const dropdown = document.getElementById('lastDaysdropdown');
            const dropdownButton = document.getElementById('dropdownDefaultButton');
            
            dropdownButton.addEventListener('click', function(event) {
                dropdown.classList.toggle('hidden');
            });

            dropdown.addEventListener('click', function(event) {
                if (event.target.tagName === 'A') {
                    const period = event.target.textContent;
                    fetchDataAndUpdateChart(period);
                    dropdown.classList.add('hidden');
                }
            });
        });
    </script>

    <script>
        const monthlyIncome = <%= @monthly_income.to_json.html_safe %>;
        const monthlyExpense = <%= @monthly_expense.to_json.html_safe %>;

        const allMonths = new Set([...Object.keys(monthlyIncome), ...Object.keys(monthlyExpense)]);

        const sortedMonths = Array.from(allMonths).sort((a, b) => new Date(a + " 1, 2023").getMonth() - new Date(b + " 1, 2023").getMonth());

        const barChartOptions = {
            series: [
            {
                name: "Gelir",
                color: "#31C48D",
                data: sortedMonths.map(month => monthlyIncome[month] || 0),
            },
            {
                name: "Gider",
                data: sortedMonths.map(month => monthlyExpense[month] || 0),
                color: "#F05252",
            }
            ],
            chart: {
            sparkline: {
                enabled: false,
            },
            type: "bar",
            width: "100%",
            height: 400,
            toolbar: {
                show: false,
            }
            },
            fill: {
            opacity: 1,
            },
            plotOptions: {
            bar: {
                horizontal: true,
                columnWidth: "100%",
                borderRadiusApplication: "end",
                borderRadius: 6,
                dataLabels: {
                position: "top",
                },
            },
            },
            legend: {
            show: true,
            position: "bottom",
            },
            dataLabels: {
            enabled: false,
            },
            tooltip: {
            shared: true,
            intersect: false,
            formatter: function (value) {
                return value + "TL"
            }
            },
            xaxis: {
            labels: {
                show: true,
                style: {
                fontFamily: "Inter, sans-serif",
                cssClass: 'text-xs font-normal fill-gray-500 dark:fill-gray-400'
                },
                formatter: function(value) {
                return value + "TL"
                }
            },
            categories: sortedMonths , 
            axisTicks: {
                show: false,
            },
            axisBorder: {
                show: false,
            },
            },
            yaxis: {
            labels: {
                show: true,
                style: {
                fontFamily: "Inter, sans-serif",
                cssClass: 'text-xs font-normal fill-gray-500 dark:fill-gray-400'
                }
            }
            },
            grid: {
            show: true,
            strokeDashArray: 4,
            padding: {
                left: 2,
                right: 2,
                top: -20
            },
            },
            fill: {
            opacity: 1,
            }
        }
        
        if(document.getElementById("bar-chart") && typeof ApexCharts !== 'undefined') {
            const chart = new ApexCharts(document.getElementById("bar-chart"), barChartOptions);
            chart.render();
        }
        
    </script>
    
    <div class="grid max-w-sm w-full bg-white rounded-lg shadow dark:bg-gray-800 p-4 md:p-6" style="padding: 3%; gap:2rem; align-items:center;">
        
    </div>

    

</div>


